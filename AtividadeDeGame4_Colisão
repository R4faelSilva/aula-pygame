import pygame
import time

BRANCO = (255,255,255)
PRETO = (0, 0, 0)
BRANCO = (255, 255, 255)
VERMELHO = (255, 0, 0)
VERDE = (0, 255, 0)
AZUL = (0, 0, 255)
ROXO = (137, 0, 255)

LARGURAJANELA = 900
ALTURAJANELA = 700

def mover(bloco, dimensaoJanela):
    borda_esquerda = 0
    borda_superior = 0
    borda_direita = dimensaoJanela[0]
    borda_inferior = dimensaoJanela[1]
    # Checa se a bloco ultrapassa o topo ou base da janela
    if bloco["objRect"].top < borda_superior or bloco["objRect"].bottom > borda_inferior:
        # bloco atingiu o topo ou a base da janela
        # Se sim, então inverte o valor de velocidade. Efeito visual de quicar.
        bloco['vel'][1] = -bloco['vel'][1]
    # Checa se a bloco ultrapassa a direita ou esquerda da janela
    if bloco["objRect"].left < borda_esquerda or bloco["objRect"].right > borda_direita:
        # bloco atingiu o topo ou a base da janela
        # Se sim, então inverte o valor de velocidade. Efeito visual de quicar.
        bloco['vel'][0] = -bloco['vel'][0]
# Finalmente. as novas coordenadas da bloco correspondente serão, então, guardadas dentro da estrutura
    bloco['objRect'].x += bloco["vel"][0]
    bloco['objRect'].y += bloco["vel"][1]

pygame.init()
relogio = pygame.time.Clock()
janela = pygame.display.set_mode((LARGURAJANELA, ALTURAJANELA))
pygame.display.set_caption("Colisão")

b1 = {"objRect": pygame.Rect(100,80,60,60), "cor":VERMELHO, "vel": [0,4]}
b2 = {"objRect": pygame.Rect(300,20,60,60), "cor":VERDE, "vel": [0,6]}
b3 = {"objRect": pygame.Rect(500,150,60,60), "cor":AZUL, "vel": [0,2]}
b4 = {"objRect": pygame.Rect(750,150,60,60), "cor":ROXO, "vel": [0,8]}

blocos = [b1,b2,b3,b4]

bola = {"objRect": pygame.Rect(270,330,30,30), "cor": BRANCO, "vel": [6,6]}


deve_continuar = True
while deve_continuar:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            deve_continuar = False
    janela.fill(PRETO)
    for bloco in blocos:
        mover(bloco,(LARGURAJANELA,ALTURAJANELA))
        pygame.draw.rect(janela, bloco["cor"], bloco["objRect"])
        # Mudando a cor da bola caso colida com o bloco
        mudaCor = bola["objRect"].colliderect(bloco["objRect"])
        if mudaCor:
            bola["cor"] = bloco["cor"]
    mover(bola,(LARGURAJANELA, ALTURAJANELA))
    pygame.draw.ellipse(janela,bola["cor"],bola["objRect"])
    pygame.display.update()
    relogio.tick(60)
pygame.quit()